//time complexity : O(n)
	//space complexity :o(n)+O(n) stack space and  array
  
  //code : -

package dpseries;
import java.util.*;
public class l1q1fibbonacci {
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int dp[]=new int[n+1];
		Arrays.fill(dp, -1);
		dp[0]=0;
		dp[1]=1;
		System.out.println(fibbonaccciSeries(n,dp));

	}

	private static int fibbonaccciSeries(int n, int[] dp) {
		if(n<=1)
			return n;
		if(dp[n]!=-1)
			return dp[n];
		return dp[n]=fibbonaccciSeries(n-1,dp)+fibbonaccciSeries(n-2,dp);
		
	}

}
