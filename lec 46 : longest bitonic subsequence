import java.util.* ;
import java.io.*; 
public class Solution {
    public static int longestBitonicSequence(int[] nums, int n) {
        // TIME COMPLEXITY : o(N^2)
        //SPACE COM : O(n)

        int inc[]=new int[n];//left to right LIS
        for(int i=0;i<n;i++){
            inc[i]=1;
            for(int j=i-1;j>=0;j--){
                if(nums[j]<nums[i] && inc[j]+1>inc[i])
                inc[i]=inc[j]+1;
            }
        }
        
        //for decreasing array
        int dec[]=new int[n];//RIGHT T0 LEFT LIS
        for(int i=n-1;i>=0;i--){
            dec[i]=1;
            for(int j=i+1;j<n;j++){
                if(nums[j]<nums[i] && dec[j]+1>dec[i])
                dec[i]=dec[j]+1;
            }
        }
        int ans=0;
        for(int i=0;i<n;i++){
            ans=Math.max(ans,inc[i]+dec[i]-1);
        }
        return ans;
    }
}
